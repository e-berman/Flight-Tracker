{"ast":null,"code":"var _jsxFileName = \"/Users/eberman/ankylosaurus/school/CS_361/Flight-Tracker/flight_tracker_react/src/pages/HomePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; // import { AiOutlineQuestionCircle } from \"react-icons/ai\";\n\nimport { MdFlight } from \"react-icons/md\";\nimport { useNavigate } from 'react-router-dom';\nimport { Container, Row, Col, Button, Form, Navbar, Popover, OverlayTrigger } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction HomePage() {\n  _s();\n\n  // initialize state variables\n  const [departingAirport, setDepartingAirport] = useState('');\n  const [arrivingAirport, setArrivingAirport] = useState('');\n  const [departingDate, setDepartingDate] = useState('');\n  const [arrivingDate, setArrivingDate] = useState('');\n  const [flightType, setFlightType] = useState(\"One Way\");\n  const [hidden, setHidden] = useState(false);\n  let flights = null; // with React v6, navigate replaces useHistory\n\n  const navigate = useNavigate(); // passes newFlight parameters to flight route.\n  // then passes the resulting flights array to the results page\n\n  const createFlight = async () => {\n    const newFlight = {\n      flightType,\n      departingAirport,\n      arrivingAirport,\n      departingDate,\n      arrivingDate\n    };\n    await fetch('/flight', {\n      method: 'POST',\n      body: JSON.stringify(newFlight),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(payload_data => {\n      console.log(payload_data);\n      flights = payload_data;\n    });\n    navigate('/results', {\n      state: {\n        flights: flights\n      }\n    });\n  };\n\n  const changeHandler = event => {\n    setFlightType(event.target.value);\n\n    if (flightType === 'One Way') {\n      setHidden(true);\n    } else {\n      setHidden(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"homepage\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      bg: \"dark\",\n      variant: \"dark\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Navbar.Brand, {\n          href: \"/\",\n          children: [/*#__PURE__*/_jsxDEV(MdFlight, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), \"Fire-Sale Flights\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"mt-5\",\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"flightType\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Flight Type: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                onChange: e => changeHandler(e),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"One Way\",\n                  children: \"One Way\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Round Trip\",\n                  children: \"Round Trip\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"departingAirport\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Departing Airport: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Enter Airport Abbreviation..\",\n                value: departingAirport,\n                onChange: e => setDepartingAirport(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"arrivingAirport\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Arriving Airport: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Enter Airport Abbreviation..\",\n                value: arrivingAirport,\n                onChange: e => setArrivingAirport(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"departureDate\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Departing Date: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"date\",\n                placeholder: \"Enter Airport Abbreviation..\",\n                value: departingDate,\n                onChange: e => setDepartingDate(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: hidden ? \"d-block\" : \"d-none\",\n              controlId: \"arrivingDate\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Return Date: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"date\",\n                placeholder: \"Enter Airport Abbreviation..\",\n                value: arrivingDate,\n                onChange: e => setArrivingDate(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mt-4\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: createFlight,\n              children: \"Generate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n              trigger: \"click\",\n              placement: \"bottom\",\n              overlay: /*#__PURE__*/_jsxDEV(Popover, {\n                id: \"popover-basic\",\n                children: [/*#__PURE__*/_jsxDEV(Popover.Header, {\n                  as: \"h3\",\n                  children: \"How To Use Fire-Sale Flights\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Popover.Body, {\n                  children: [\"Enter in the flight type, departing airport, and arriving airport. You will also need to include the date range for your trip.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 33\n                  }, this), \"Once you have all the info entered, click \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Generate\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 75\n                  }, this), \" to get your results.\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 29\n              }, this),\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                className: \"ms-3\",\n                variant: \"outline-dark\",\n                children: \"Need Help?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n\n_s(HomePage, \"rQvoaiuTA4xyPaboTpTAFuoIQzc=\", false, function () {\n  return [useNavigate];\n});\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/Users/eberman/ankylosaurus/school/CS_361/Flight-Tracker/flight_tracker_react/src/pages/HomePage.js"],"names":["React","useState","MdFlight","useNavigate","Container","Row","Col","Button","Form","Navbar","Popover","OverlayTrigger","HomePage","departingAirport","setDepartingAirport","arrivingAirport","setArrivingAirport","departingDate","setDepartingDate","arrivingDate","setArrivingDate","flightType","setFlightType","hidden","setHidden","flights","navigate","createFlight","newFlight","fetch","method","body","JSON","stringify","headers","then","response","json","payload_data","console","log","state","changeHandler","event","target","value","e"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n// import { AiOutlineQuestionCircle } from \"react-icons/ai\";\nimport { MdFlight } from \"react-icons/md\";\nimport { useNavigate } from 'react-router-dom';\nimport { Container, Row, Col, Button, Form, Navbar, Popover, OverlayTrigger } from 'react-bootstrap';\n\nfunction HomePage() {\n\n    // initialize state variables\n    const [departingAirport, setDepartingAirport] = useState('');\n    const [arrivingAirport, setArrivingAirport] = useState('');\n    const [departingDate, setDepartingDate] = useState('');\n    const [arrivingDate, setArrivingDate] = useState('');\n    const [flightType, setFlightType] = useState(\"One Way\");\n    const [hidden, setHidden] = useState(false);\n    let flights = null\n\n    // with React v6, navigate replaces useHistory\n    const navigate = useNavigate();\n\n    // passes newFlight parameters to flight route.\n    // then passes the resulting flights array to the results page\n    const createFlight = async () => {\n        const newFlight = {flightType, departingAirport, arrivingAirport, departingDate, arrivingDate};\n        await fetch('/flight', {\n            method: 'POST', \n            body: JSON.stringify(newFlight),\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        })\n        .then(response => response.json())\n        .then(payload_data => { \n            console.log(payload_data)\n            flights = payload_data\n        });\n\n        navigate('/results', {\n            state: {\n                flights: flights\n            }\n        });\n    }\n\n    const changeHandler = (event) => {\n        setFlightType(event.target.value)\n        if (flightType === 'One Way') {\n            setHidden(true);\n        } else {\n            setHidden(false);\n        }\n        \n    }\n\n\n    return (\n\n        <div className=\"homepage\">\n            <Navbar bg=\"dark\" variant=\"dark\">\n                <Container>\n                    <Navbar.Brand href=\"/\">\n                        <MdFlight />\n                    Fire-Sale Flights\n                    </Navbar.Brand>\n                </Container>\n            </Navbar>\n            <Container>\n            <Form className=\"mt-5\">\n                <Row className=\"mt-3\">\n                    <Col>\n                    <Form.Group controlId=\"flightType\">\n                        <Form.Label>Flight Type: </Form.Label>\n                        <Form.Select onChange={e => changeHandler(e)}>\n                            <option value=\"One Way\">One Way</option>\n                            <option value=\"Round Trip\">Round Trip</option>\n                        </Form.Select>\n                    </Form.Group>\n                    </Col>\n                    <Col>\n                    <Form.Group controlId=\"departingAirport\">\n                        <Form.Label>Departing Airport: </Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            placeholder='Enter Airport Abbreviation..'\n                            value={departingAirport}\n                            onChange={e => setDepartingAirport(e.target.value)}\n                        />\n                    </Form.Group>\n                    </Col>\n                    <Col>\n                    <Form.Group controlId=\"arrivingAirport\">\n                        <Form.Label>Arriving Airport: </Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            placeholder='Enter Airport Abbreviation..'\n                            value={arrivingAirport}\n                            onChange={e => setArrivingAirport(e.target.value)}\n                        />\n                    </Form.Group>\n                    </Col>\n                </Row>\n                <Row className=\"mt-3\">\n                    <Col>\n                    <Form.Group controlId=\"departureDate\">\n                        <Form.Label>Departing Date: </Form.Label>\n                        <Form.Control\n                            type='date'\n                            placeholder='Enter Airport Abbreviation..'\n                            value={departingDate}\n                            onChange={e => setDepartingDate(e.target.value)}\n                        />\n                    </Form.Group>\n                    </Col>\n                    <Col>\n                    <Form.Group className={hidden ? \"d-block\" : \"d-none\"} controlId=\"arrivingDate\">\n                        <Form.Label>Return Date: </Form.Label>\n                        <Form.Control\n                            type='date'\n                            placeholder='Enter Airport Abbreviation..'\n                            value={arrivingDate}\n                            onChange={e => setArrivingDate(e.target.value)}\n                        />\n                    </Form.Group>\n                    </Col>\n                </Row>\n                <Row className=\"mt-4\">\n                    <Col>\n                        <Button onClick={createFlight}>Generate</Button>\n                        <OverlayTrigger\n                        trigger=\"click\"\n                        placement=\"bottom\"\n                        overlay={\n                            <Popover id=\"popover-basic\">\n                                <Popover.Header as=\"h3\">How To Use Fire-Sale Flights</Popover.Header>\n                                <Popover.Body>\n                                Enter in the flight type, departing airport, and arriving airport.\n                                You will also need to include the date range for your trip.\n                                <br />\n                                <br />\n                                Once you have all the info entered, click <strong>Generate</strong> to get your results.\n                                </Popover.Body>\n                            </Popover>\n                        }\n                        >\n                            <Button className=\"ms-3\" variant=\"outline-dark\">Need Help?</Button>\n                        </OverlayTrigger>\n                    </Col>\n                </Row>\n            </Form>\n            </Container>\n        </div>\n    );\n}\n\nexport default HomePage;"]},"metadata":{},"sourceType":"module"}