{"ast":null,"code":"var _jsxFileName = \"/Users/eberman/ankylosaurus/school/CS_361/Flight-Tracker/flight_tracker_react/src/pages/HomePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { AiOutlineQuestionCircle } from \"react-icons/ai\";\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction HomePage() {\n  _s();\n\n  const [flightType, setFlightType] = useState('');\n  const [departingAirport, setDepartingAirport] = useState('');\n  const [arrivingAirport, setArrivingAirport] = useState('');\n  const [departingDate, setDepartingDate] = useState('');\n  const [arrivingDate, setArrivingDate] = useState(''); // with React v6, navigate replaces history\n\n  const navigate = useNavigate(); // creates an flight and adds to database\n\n  const createFlight = async () => {\n    const newFlight = {\n      flightType,\n      departingAirport,\n      arrivingAirport,\n      departingDate,\n      arrivingDate\n    };\n    const response = await fetch('/', {\n      method: 'POST',\n      body: JSON.stringify(newFlight),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }); // error handling with response status check\n\n    if (response.status === 201) {\n      alert('Successfully added the flight');\n    } else {\n      alert(`Failed to add the flight. Status code = ${response.status}`);\n    }\n\n    navigate('/results');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Flight Tracker App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: flightType,\n          onChange: e => setFlightType(e.target.value),\n          children: \"One Way\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: flightType,\n          onChange: e => setFlightType(e.target.value),\n          children: \"Round Trip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Departing Airport:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter Airport Abbreviation..\",\n          value: departingAirport,\n          onChange: e => setDepartingAirport(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AiOutlineQuestionCircle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Arriving Airport:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter Airport Abbreviation..\",\n          value: arrivingAirport,\n          onChange: e => setArrivingAirport(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Departure Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          placeholder: \"Enter Airport Abbreviation..\",\n          value: departingDate,\n          onChange: e => setDepartingDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Return Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          placeholder: \"Enter Airport Abbreviation..\",\n          value: arrivingDate,\n          onChange: e => setArrivingDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createFlight,\n        children: \"Generate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(HomePage, \"LBTPNEb8ZuobvdtBha1hHHvYXb4=\", false, function () {\n  return [useNavigate];\n});\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/Users/eberman/ankylosaurus/school/CS_361/Flight-Tracker/flight_tracker_react/src/pages/HomePage.js"],"names":["React","useState","AiOutlineQuestionCircle","useNavigate","HomePage","flightType","setFlightType","departingAirport","setDepartingAirport","arrivingAirport","setArrivingAirport","departingDate","setDepartingDate","arrivingDate","setArrivingDate","navigate","createFlight","newFlight","response","fetch","method","body","JSON","stringify","headers","status","alert","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { AiOutlineQuestionCircle } from \"react-icons/ai\";\nimport { useNavigate } from 'react-router-dom';\n\nfunction HomePage() {\n\n    const [flightType, setFlightType] = useState('');\n    const [departingAirport, setDepartingAirport] = useState('');\n    const [arrivingAirport, setArrivingAirport] = useState('');\n    const [departingDate, setDepartingDate] = useState('');\n    const [arrivingDate, setArrivingDate] = useState('');\n\n    // with React v6, navigate replaces history\n    const navigate = useNavigate();\n\n    // creates an flight and adds to database\n\n    const createFlight = async () => {\n        const newFlight = {flightType, departingAirport, arrivingAirport, departingDate, arrivingDate};\n        const response = await fetch('/', {\n            method: 'POST', \n            body: JSON.stringify(newFlight),\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        });\n\n        // error handling with response status check\n\n        if (response.status === 201) {\n            alert('Successfully added the flight');\n        } else {\n            alert(`Failed to add the flight. Status code = ${response.status}`);\n        }\n        navigate('/results');\n    }\n\n\n    return (\n        <>\n            <div className=\"header\">\n                <h1>Flight Tracker App</h1>\n            </div>\n            <div>\n                <select>\n                    <option value={flightType} onChange={e => setFlightType(e.target.value)}>One Way</option>\n                    <option value={flightType} onChange={e => setFlightType(e.target.value)}>Round Trip</option>\n                </select>\n            </div>\n            <div>\n                <label>\n                    Departing Airport:\n                    <input \n                        type='text'\n                        placeholder='Enter Airport Abbreviation..'\n                        value={departingAirport}\n                        onChange={e => setDepartingAirport(e.target.value)}/>\n                </label>\n                <AiOutlineQuestionCircle />\n            </div>\n            <div>\n                <label>\n                    Arriving Airport:\n                    <input\n                        type='text'\n                        placeholder='Enter Airport Abbreviation..'\n                        value={arrivingAirport}\n                        onChange={e => setArrivingAirport(e.target.value)}/>\n                </label>\n            </div>\n            <div>\n                <label>\n                    Departure Date: \n                    <input\n                        type='date'\n                        placeholder='Enter Airport Abbreviation..'\n                        value={departingDate}\n                        onChange={e => setDepartingDate(e.target.value)}/>\n                </label>\n            </div>\n            <div>\n                <label>\n                    Return Date: \n                    <input\n                        type='date'\n                        placeholder='Enter Airport Abbreviation..'\n                        value={arrivingDate}\n                        onChange={e => setArrivingDate(e.target.value)}/>\n                </label>\n            </div>\n            <div>\n                <button onClick={createFlight}>Generate</button>\n            </div>\n\n            \n        </>\n    );\n}\n\nexport default HomePage;"]},"metadata":{},"sourceType":"module"}